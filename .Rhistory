library(myshinyapp)
run_app()
install.packages(myshinyapp)
library(myshinyapp)
run_app()
library(myshinyapp)
library(myshinyapp)
run_app()
library(devtools)
install.packages(myshinyapp)
library(myshinyapp)
run_app()
library(myshinyapp)
library(myshinyapp)
shiny::runApp('C:/Users/alioubadara.samake/Downloads/MonShinyApp/Quality_Check_Final')
library(myshinyapp)
run_app()
library(myshinyapp)
run_app()
runApp('C:/Users/alioubadara.samake/Downloads/MonShinyApp/Quality_Check_Final')
devtools::document()
devtools::build()
devtools::install()
myshinyapp::run_app()
devtools::document()
devtools::build()
devtools::install()
myshinyapp::run_app()
devtools::document()
devtools::build()
devtools::install()
myshinyapp::run_app()
# (1) Load your package so that system.file() will work
library(myshinyapp)
# (2) See where the template lives
rmd_path <- system.file("app", "report.rmd", package = "myshinyapp")
rmd_path
library(myshinyapp)
# 1. Find the path to the template
rmd_template <- system.file("app", "report.rmd", package = "myshinyapp")
# 2. Copy it to a temp file (so you don’t accidentally overwrite it)
temp_rmd <- tempfile(fileext = ".Rmd")
file.copy(rmd_template, temp_rmd, overwrite = TRUE)
# 3. Render it to HTML
#    (If your Rmd uses params, you can supply a params list; if not, omit params.)
rmarkdown::render(
input       = temp_rmd,
output_file = "test_report.html",
envir       = new.env(parent = globalenv())
)
library(myshinyapp)
# 1. Find the path to the template
rmd_template <- system.file("app", "report.rmd", package = "myshinyapp")
# 2. Copy it to a temp file (so you don’t accidentally overwrite it)
temp_rmd <- tempfile(fileext = ".Rmd")
file.copy(rmd_template, temp_rmd, overwrite = TRUE)
# 3. Render it to HTML
#    (If your Rmd uses params, you can supply a params list; if not, omit params.)
rmarkdown::render(
input       = temp_rmd,
output_file = "test_report.html",
envir       = new.env(parent = globalenv())
)
shiny::runApp('inst/app')
runApp('inst/app')
library(shiny); source('main.R')
